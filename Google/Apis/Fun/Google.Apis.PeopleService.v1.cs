// Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
// the License. You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
// an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
// specific language governing permissions and limitations under the License.

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by google-apis-code-generator 1.5.1
//     C# generator version: 1.28.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

/**
 * \brief
 *   Google People API Version v1
 *
 * \section ApiInfo API Version Information
 *    <table>
 *      <tr><th>API
 *          <td><a href='https://developers.google.com/people/'>Google People API</a>
 *      <tr><th>API Version<td>v1
 *      <tr><th>API Rev<td>20170805 (947)
 *      <tr><th>API Docs
 *          <td><a href='https://developers.google.com/people/'>
 *              https://developers.google.com/people/</a>
 *      <tr><th>Discovery Name<td>people
 *    </table>
 *
 * \section ForMoreInfo For More Information
 *
 * The complete API documentation for using Google People API can be found at
 * <a href='https://developers.google.com/people/'>https://developers.google.com/people/</a>.
 *
 * For more information about the Google APIs Client Library for .NET, see
 * <a href='https://developers.google.com/api-client-library/dotnet/get_started'>
 * https://developers.google.com/api-client-library/dotnet/get_started</a>
 */

namespace Google.Apis.PeopleService.v1
{
    /// <summary>The PeopleService Service.</summary>
    public class PeopleServiceService : Google.Apis.Services.BaseClientService
    {
        /// <summary>The API version.</summary>
        public const string Version = "v1";

        /// <summary>The discovery version used to generate this service.</summary>
        public static Google.Apis.Discovery.DiscoveryVersion DiscoveryVersionUsed =
            Google.Apis.Discovery.DiscoveryVersion.Version_1_0;

        /// <summary>Constructs a new service.</summary>
        public PeopleServiceService() :
            this(new Google.Apis.Services.BaseClientService.Initializer()) {}

        /// <summary>Constructs a new service.</summary>
        /// <param name="initializer">The service initializer.</param>
        public PeopleServiceService(Google.Apis.Services.BaseClientService.Initializer initializer)
            : base(initializer)
        {
            contactGroups = new ContactGroupsResource(this);
            people = new PeopleResource(this);
        }

        /// <summary>Gets the service supported features.</summary>
        public override System.Collections.Generic.IList<string> Features
        {
            get { return new string[0]; }
        }

        /// <summary>Gets the service name.</summary>
        public override string Name
        {
            get { return "people"; }
        }

        /// <summary>Gets the service base URI.</summary>
        public override string BaseUri
        {
            get { return "https://people.googleapis.com/"; }
        }

        /// <summary>Gets the service base path.</summary>
        public override string BasePath
        {
            get { return ""; }
        }

        #if !NET40
        /// <summary>Gets the batch base URI; <c>null</c> if unspecified.</summary>
        public override string BatchUri
        {
            get { return "https://people.googleapis.com/batch"; }
        }

        /// <summary>Gets the batch base path; <c>null</c> if unspecified.</summary>
        public override string BatchPath
        {
            get { return "batch"; }
        }
        #endif

        /// <summary>Available OAuth 2.0 scopes for use with the Google People API.</summary>
        public class Scope
        {
            /// <summary>Manage your contacts</summary>
            public static string Contacts = "https://www.googleapis.com/auth/contacts";

            /// <summary>View your contacts</summary>
            public static string ContactsReadonly = "https://www.googleapis.com/auth/contacts.readonly";

            /// <summary>Know the list of people in your circles, your age range, and language</summary>
            public static string PlusLogin = "https://www.googleapis.com/auth/plus.login";

            /// <summary>View your street addresses</summary>
            public static string UserAddressesRead = "https://www.googleapis.com/auth/user.addresses.read";

            /// <summary>View your complete date of birth</summary>
            public static string UserBirthdayRead = "https://www.googleapis.com/auth/user.birthday.read";

            /// <summary>View your email addresses</summary>
            public static string UserEmailsRead = "https://www.googleapis.com/auth/user.emails.read";

            /// <summary>View your phone numbers</summary>
            public static string UserPhonenumbersRead = "https://www.googleapis.com/auth/user.phonenumbers.read";

            /// <summary>View your email address</summary>
            public static string UserinfoEmail = "https://www.googleapis.com/auth/userinfo.email";

            /// <summary>View your basic profile info</summary>
            public static string UserinfoProfile = "https://www.googleapis.com/auth/userinfo.profile";

        }



        private readonly ContactGroupsResource contactGroups;

        /// <summary>Gets the ContactGroups resource.</summary>
        public virtual ContactGroupsResource ContactGroups
        {
            get { return contactGroups; }
        }

        private readonly PeopleResource people;

        /// <summary>Gets the People resource.</summary>
        public virtual PeopleResource People
        {
            get { return people; }
        }
    }

    ///<summary>A base abstract class for PeopleService requests.</summary>
    public abstract class PeopleServiceBaseServiceRequest<TResponse> : Google.Apis.Requests.ClientServiceRequest<TResponse>
    {
        ///<summary>Constructs a new PeopleServiceBaseServiceRequest instance.</summary>
        protected PeopleServiceBaseServiceRequest(Google.Apis.Services.IClientService service)
            : base(service)
        {
        }

        /// <summary>V1 error format.</summary>
        [Google.Apis.Util.RequestParameterAttribute("$.xgafv", Google.Apis.Util.RequestParameterType.Query)]
        public virtual System.Nullable<XgafvEnum> Xgafv { get; set; }

        /// <summary>V1 error format.</summary>
        public enum XgafvEnum
        {
            /// <summary>v1 error format</summary>
            [Google.Apis.Util.StringValueAttribute("1")]
            Value1,
            /// <summary>v2 error format</summary>
            [Google.Apis.Util.StringValueAttribute("2")]
            Value2,
        }

        /// <summary>OAuth access token.</summary>
        [Google.Apis.Util.RequestParameterAttribute("access_token", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string AccessToken { get; set; }

        /// <summary>Data format for response.</summary>
        /// [default: json]
        [Google.Apis.Util.RequestParameterAttribute("alt", Google.Apis.Util.RequestParameterType.Query)]
        public virtual System.Nullable<AltEnum> Alt { get; set; }

        /// <summary>Data format for response.</summary>
        public enum AltEnum
        {
            /// <summary>Responses with Content-Type of application/json</summary>
            [Google.Apis.Util.StringValueAttribute("json")]
            Json,
            /// <summary>Media download with context-dependent Content-Type</summary>
            [Google.Apis.Util.StringValueAttribute("media")]
            Media,
            /// <summary>Responses with Content-Type of application/x-protobuf</summary>
            [Google.Apis.Util.StringValueAttribute("proto")]
            Proto,
        }

        /// <summary>OAuth bearer token.</summary>
        [Google.Apis.Util.RequestParameterAttribute("bearer_token", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string BearerToken { get; set; }

        /// <summary>JSONP</summary>
        [Google.Apis.Util.RequestParameterAttribute("callback", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string Callback { get; set; }

        /// <summary>Selector specifying which fields to include in a partial response.</summary>
        [Google.Apis.Util.RequestParameterAttribute("fields", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string Fields { get; set; }

        /// <summary>API key. Your API key identifies your project and provides you with API access, quota, and reports.
        /// Required unless you provide an OAuth 2.0 token.</summary>
        [Google.Apis.Util.RequestParameterAttribute("key", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string Key { get; set; }

        /// <summary>OAuth 2.0 token for the current user.</summary>
        [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string OauthToken { get; set; }

        /// <summary>Pretty-print response.</summary>
        /// [default: true]
        [Google.Apis.Util.RequestParameterAttribute("pp", Google.Apis.Util.RequestParameterType.Query)]
        public virtual System.Nullable<bool> Pp { get; set; }

        /// <summary>Returns response with indentations and line breaks.</summary>
        /// [default: true]
        [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
        public virtual System.Nullable<bool> PrettyPrint { get; set; }

        /// <summary>Available to use for quota purposes for server-side applications. Can be any arbitrary string
        /// assigned to a user, but should not exceed 40 characters.</summary>
        [Google.Apis.Util.RequestParameterAttribute("quotaUser", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string QuotaUser { get; set; }

        /// <summary>Legacy upload protocol for media (e.g. "media", "multipart").</summary>
        [Google.Apis.Util.RequestParameterAttribute("uploadType", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string UploadType { get; set; }

        /// <summary>Upload protocol for media (e.g. "raw", "multipart").</summary>
        [Google.Apis.Util.RequestParameterAttribute("upload_protocol", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string UploadProtocol { get; set; }

        /// <summary>Initializes PeopleService parameter list.</summary>
        protected override void InitParameters()
        {
            base.InitParameters();

            RequestParameters.Add(
                "$.xgafv", new Google.Apis.Discovery.Parameter
                {
                    Name = "$.xgafv",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "access_token", new Google.Apis.Discovery.Parameter
                {
                    Name = "access_token",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "alt", new Google.Apis.Discovery.Parameter
                {
                    Name = "alt",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "json",
                    Pattern = null,
                });
            RequestParameters.Add(
                "bearer_token", new Google.Apis.Discovery.Parameter
                {
                    Name = "bearer_token",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "callback", new Google.Apis.Discovery.Parameter
                {
                    Name = "callback",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "fields", new Google.Apis.Discovery.Parameter
                {
                    Name = "fields",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "key", new Google.Apis.Discovery.Parameter
                {
                    Name = "key",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "oauth_token", new Google.Apis.Discovery.Parameter
                {
                    Name = "oauth_token",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "pp", new Google.Apis.Discovery.Parameter
                {
                    Name = "pp",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "true",
                    Pattern = null,
                });
            RequestParameters.Add(
                "prettyPrint", new Google.Apis.Discovery.Parameter
                {
                    Name = "prettyPrint",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "true",
                    Pattern = null,
                });
            RequestParameters.Add(
                "quotaUser", new Google.Apis.Discovery.Parameter
                {
                    Name = "quotaUser",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "uploadType", new Google.Apis.Discovery.Parameter
                {
                    Name = "uploadType",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "upload_protocol", new Google.Apis.Discovery.Parameter
                {
                    Name = "upload_protocol",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
        }
    }

    /// <summary>The "contactGroups" collection of methods.</summary>
    public class ContactGroupsResource
    {
        private const string Resource = "contactGroups";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public ContactGroupsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;
            members = new MembersResource(service);

        }

        private readonly MembersResource members;

        /// <summary>Gets the Members resource.</summary>
        public virtual MembersResource Members
        {
            get { return members; }
        }

        /// <summary>The "members" collection of methods.</summary>
        public class MembersResource
        {
            private const string Resource = "members";

            /// <summary>The service which this resource belongs to.</summary>
            private readonly Google.Apis.Services.IClientService service;

            /// <summary>Constructs a new resource.</summary>
            public MembersResource(Google.Apis.Services.IClientService service)
            {
                this.service = service;

            }


            /// <summary>Modify the members of a contact group owned by the authenticated user.</summary>
            /// <param name="body">The body of the request.</param>
            /// <param name="resourceName">The resource name of the contact group to modify.</param>
            public virtual ModifyRequest Modify(Google.Apis.PeopleService.v1.Data.ModifyContactGroupMembersRequest body, string resourceName)
            {
                return new ModifyRequest(service, body, resourceName);
            }

            /// <summary>Modify the members of a contact group owned by the authenticated user.</summary>
            public class ModifyRequest : PeopleServiceBaseServiceRequest<Google.Apis.PeopleService.v1.Data.ModifyContactGroupMembersResponse>
            {
                /// <summary>Constructs a new Modify request.</summary>
                public ModifyRequest(Google.Apis.Services.IClientService service, Google.Apis.PeopleService.v1.Data.ModifyContactGroupMembersRequest body, string resourceName)
                    : base(service)
                {
                    ResourceName = resourceName;
                    Body = body;
                    InitParameters();
                }


                /// <summary>The resource name of the contact group to modify.</summary>
                [Google.Apis.Util.RequestParameterAttribute("resourceName", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string ResourceName { get; private set; }


                /// <summary>Gets or sets the body of this request.</summary>
                Google.Apis.PeopleService.v1.Data.ModifyContactGroupMembersRequest Body { get; set; }

                ///<summary>Returns the body of the request.</summary>
                protected override object GetBody() { return Body; }

                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "modify"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "POST"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v1/{+resourceName}/members:modify"; }
                }

                /// <summary>Initializes Modify parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "resourceName", new Google.Apis.Discovery.Parameter
                        {
                            Name = "resourceName",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^contactGroups/[^/]+$",
                        });
                }

            }
        }

        /// <summary>Get a list of contact groups owned by the authenticated user by specifying a list of contact group
        /// resource names.</summary>
        public virtual BatchGetRequest BatchGet()
        {
            return new BatchGetRequest(service);
        }

        /// <summary>Get a list of contact groups owned by the authenticated user by specifying a list of contact group
        /// resource names.</summary>
        public class BatchGetRequest : PeopleServiceBaseServiceRequest<Google.Apis.PeopleService.v1.Data.BatchGetContactGroupsResponse>
        {
            /// <summary>Constructs a new BatchGet request.</summary>
            public BatchGetRequest(Google.Apis.Services.IClientService service)
                : base(service)
            {
                InitParameters();
            }


            /// <summary>Specifies the maximum number of members to return for each group.</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxMembers", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> MaxMembers { get; set; }

            /// <summary>The resource names of the contact groups to get.</summary>
            [Google.Apis.Util.RequestParameterAttribute("resourceNames", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> ResourceNames { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "batchGet"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "v1/contactGroups:batchGet"; }
            }

            /// <summary>Initializes BatchGet parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "maxMembers", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxMembers",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "resourceNames", new Google.Apis.Discovery.Parameter
                    {
                        Name = "resourceNames",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Create a new contact group owned by the authenticated user.</summary>
        /// <param name="body">The body of the request.</param>
        public virtual CreateRequest Create(Google.Apis.PeopleService.v1.Data.CreateContactGroupRequest body)
        {
            return new CreateRequest(service, body);
        }

        /// <summary>Create a new contact group owned by the authenticated user.</summary>
        public class CreateRequest : PeopleServiceBaseServiceRequest<Google.Apis.PeopleService.v1.Data.ContactGroup>
        {
            /// <summary>Constructs a new Create request.</summary>
            public CreateRequest(Google.Apis.Services.IClientService service, Google.Apis.PeopleService.v1.Data.CreateContactGroupRequest body)
                : base(service)
            {
                Body = body;
                InitParameters();
            }



            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.PeopleService.v1.Data.CreateContactGroupRequest Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "create"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "v1/contactGroups"; }
            }

            /// <summary>Initializes Create parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

            }

        }

        /// <summary>Delete an existing contact group owned by the authenticated user by specifying a contact group
        /// resource name.</summary>
        /// <param name="resourceName">The resource name of the contact group to delete.</param>
        public virtual DeleteRequest Delete(string resourceName)
        {
            return new DeleteRequest(service, resourceName);
        }

        /// <summary>Delete an existing contact group owned by the authenticated user by specifying a contact group
        /// resource name.</summary>
        public class DeleteRequest : PeopleServiceBaseServiceRequest<Google.Apis.PeopleService.v1.Data.Empty>
        {
            /// <summary>Constructs a new Delete request.</summary>
            public DeleteRequest(Google.Apis.Services.IClientService service, string resourceName)
                : base(service)
            {
                ResourceName = resourceName;
                InitParameters();
            }


            /// <summary>The resource name of the contact group to delete.</summary>
            [Google.Apis.Util.RequestParameterAttribute("resourceName", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string ResourceName { get; private set; }

            /// <summary>Set to true to also delete the contacts in the specified group.</summary>
            [Google.Apis.Util.RequestParameterAttribute("deleteContacts", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> DeleteContacts { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "delete"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "DELETE"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "v1/{+resourceName}"; }
            }

            /// <summary>Initializes Delete parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "resourceName", new Google.Apis.Discovery.Parameter
                    {
                        Name = "resourceName",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"^contactGroups/[^/]+$",
                    });
                RequestParameters.Add(
                    "deleteContacts", new Google.Apis.Discovery.Parameter
                    {
                        Name = "deleteContacts",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Get a specific contact group owned by the authenticated user by specifying a contact group resource
        /// name.</summary>
        /// <param name="resourceName">The resource name of the contact group to get.</param>
        public virtual GetRequest Get(string resourceName)
        {
            return new GetRequest(service, resourceName);
        }

        /// <summary>Get a specific contact group owned by the authenticated user by specifying a contact group resource
        /// name.</summary>
        public class GetRequest : PeopleServiceBaseServiceRequest<Google.Apis.PeopleService.v1.Data.ContactGroup>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, string resourceName)
                : base(service)
            {
                ResourceName = resourceName;
                InitParameters();
            }


            /// <summary>The resource name of the contact group to get.</summary>
            [Google.Apis.Util.RequestParameterAttribute("resourceName", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string ResourceName { get; private set; }

            /// <summary>Specifies the maximum number of members to return.</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxMembers", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> MaxMembers { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "v1/{+resourceName}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "resourceName", new Google.Apis.Discovery.Parameter
                    {
                        Name = "resourceName",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"^contactGroups/[^/]+$",
                    });
                RequestParameters.Add(
                    "maxMembers", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxMembers",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>List all contact groups owned by the authenticated user. Members of the contact groups are not
        /// populated.</summary>
        public virtual ListRequest List()
        {
            return new ListRequest(service);
        }

        /// <summary>List all contact groups owned by the authenticated user. Members of the contact groups are not
        /// populated.</summary>
        public class ListRequest : PeopleServiceBaseServiceRequest<Google.Apis.PeopleService.v1.Data.ListContactGroupsResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service)
                : base(service)
            {
                InitParameters();
            }


            /// <summary>The next_page_token value returned from a previous call to
            /// [ListContactGroups](/people/api/rest/v1/contactgroups/list). Requests the next page of
            /// resources.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }

            /// <summary>The maximum number of resources to return.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> PageSize { get; set; }

            /// <summary>A sync token, returned by a previous call to `contactgroups.list`. Only resources changed since
            /// the sync token was created will be returned.</summary>
            [Google.Apis.Util.RequestParameterAttribute("syncToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string SyncToken { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "v1/contactGroups"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageSize", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageSize",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "syncToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "syncToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Update the name of an existing contact group owned by the authenticated user.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="resourceName">The resource name for the contact group, assigned by the server. An ASCII string, in the
        /// form of `contactGroups/`contact_group_id.</param>
        public virtual UpdateRequest Update(Google.Apis.PeopleService.v1.Data.UpdateContactGroupRequest body, string resourceName)
        {
            return new UpdateRequest(service, body, resourceName);
        }

        /// <summary>Update the name of an existing contact group owned by the authenticated user.</summary>
        public class UpdateRequest : PeopleServiceBaseServiceRequest<Google.Apis.PeopleService.v1.Data.ContactGroup>
        {
            /// <summary>Constructs a new Update request.</summary>
            public UpdateRequest(Google.Apis.Services.IClientService service, Google.Apis.PeopleService.v1.Data.UpdateContactGroupRequest body, string resourceName)
                : base(service)
            {
                ResourceName = resourceName;
                Body = body;
                InitParameters();
            }


            /// <summary>The resource name for the contact group, assigned by the server. An ASCII string, in the form
            /// of `contactGroups/`contact_group_id.</summary>
            [Google.Apis.Util.RequestParameterAttribute("resourceName", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string ResourceName { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.PeopleService.v1.Data.UpdateContactGroupRequest Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "update"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PUT"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "v1/{+resourceName}"; }
            }

            /// <summary>Initializes Update parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "resourceName", new Google.Apis.Discovery.Parameter
                    {
                        Name = "resourceName",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"^contactGroups/[^/]+$",
                    });
            }

        }
    }

    /// <summary>The "people" collection of methods.</summary>
    public class PeopleResource
    {
        private const string Resource = "people";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public PeopleResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;
            connections = new ConnectionsResource(service);

        }

        private readonly ConnectionsResource connections;

        /// <summary>Gets the Connections resource.</summary>
        public virtual ConnectionsResource Connections
        {
            get { return connections; }
        }

        /// <summary>The "connections" collection of methods.</summary>
        public class ConnectionsResource
        {
            private const string Resource = "connections";

            /// <summary>The service which this resource belongs to.</summary>
            private readonly Google.Apis.Services.IClientService service;

            /// <summary>Constructs a new resource.</summary>
            public ConnectionsResource(Google.Apis.Services.IClientService service)
            {
                this.service = service;

            }


            /// <summary>Provides a list of the authenticated user's contacts merged with any connected profiles.
            ///
            /// The request throws a 400 error if 'personFields' is not specified.</summary>
            /// <param name="resourceName">The resource name to return connections for. Only `people/me` is valid.</param>
            public virtual ListRequest List(string resourceName)
            {
                return new ListRequest(service, resourceName);
            }

            /// <summary>Provides a list of the authenticated user's contacts merged with any connected profiles.
            ///
            /// The request throws a 400 error if 'personFields' is not specified.</summary>
            public class ListRequest : PeopleServiceBaseServiceRequest<Google.Apis.PeopleService.v1.Data.ListConnectionsResponse>
            {
                /// <summary>Constructs a new List request.</summary>
                public ListRequest(Google.Apis.Services.IClientService service, string resourceName)
                    : base(service)
                {
                    ResourceName = resourceName;
                    InitParameters();
                }


                /// <summary>The resource name to return connections for. Only `people/me` is valid.</summary>
                [Google.Apis.Util.RequestParameterAttribute("resourceName", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string ResourceName { get; private set; }

                /// <summary>The order in which the connections should be sorted. Defaults to
                /// `LAST_MODIFIED_ASCENDING`.</summary>
                [Google.Apis.Util.RequestParameterAttribute("sortOrder", Google.Apis.Util.RequestParameterType.Query)]
                public virtual System.Nullable<SortOrderEnum> SortOrder { get; set; }

                /// <summary>The order in which the connections should be sorted. Defaults to
                /// `LAST_MODIFIED_ASCENDING`.</summary>
                public enum SortOrderEnum
                {
                    [Google.Apis.Util.StringValueAttribute("LAST_MODIFIED_ASCENDING")]
                    LASTMODIFIEDASCENDING,
                    [Google.Apis.Util.StringValueAttribute("FIRST_NAME_ASCENDING")]
                    FIRSTNAMEASCENDING,
                    [Google.Apis.Util.StringValueAttribute("LAST_NAME_ASCENDING")]
                    LASTNAMEASCENDING,
                }

                /// <summary>Whether the response should include a sync token, which can be used to get all changes
                /// since the last request.</summary>
                [Google.Apis.Util.RequestParameterAttribute("requestSyncToken", Google.Apis.Util.RequestParameterType.Query)]
                public virtual System.Nullable<bool> RequestSyncToken { get; set; }

                /// <summary>The token of the page to be returned.</summary>
                [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string PageToken { get; set; }

                /// <summary>**Required.** Comma-separated list of person fields to be included in the response. Each
                /// path should start with `person.`: for example, `person.names` or `person.photos`.</summary>
                [Google.Apis.Util.RequestParameterAttribute("requestMask.includeField", Google.Apis.Util.RequestParameterType.Query)]
                public virtual object RequestMaskIncludeField { get; set; }

                /// <summary>The number of connections to include in the response. Valid values are between 1 and 2000,
                /// inclusive. Defaults to 100.</summary>
                [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                public virtual System.Nullable<int> PageSize { get; set; }

                /// <summary>A sync token, returned by a previous call to `people.connections.list`. Only resources
                /// changed since the sync token was created will be returned.</summary>
                [Google.Apis.Util.RequestParameterAttribute("syncToken", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string SyncToken { get; set; }

                /// <summary>**Required.** A field mask to restrict which fields on each person are returned. Valid
                /// values are:
                ///
                /// * addresses * ageRanges * biographies * birthdays * braggingRights * coverPhotos * emailAddresses *
                /// events * genders * imClients * interests * locales * memberships * metadata * names * nicknames *
                /// occupations * organizations * phoneNumbers * photos * relations * relationshipInterests *
                /// relationshipStatuses * residences * skills * taglines * urls</summary>
                [Google.Apis.Util.RequestParameterAttribute("personFields", Google.Apis.Util.RequestParameterType.Query)]
                public virtual object PersonFields { get; set; }


                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "list"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "GET"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v1/{+resourceName}/connections"; }
                }

                /// <summary>Initializes List parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "resourceName", new Google.Apis.Discovery.Parameter
                        {
                            Name = "resourceName",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^people/[^/]+$",
                        });
                    RequestParameters.Add(
                        "sortOrder", new Google.Apis.Discovery.Parameter
                        {
                            Name = "sortOrder",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "requestSyncToken", new Google.Apis.Discovery.Parameter
                        {
                            Name = "requestSyncToken",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "pageToken", new Google.Apis.Discovery.Parameter
                        {
                            Name = "pageToken",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "requestMask.includeField", new Google.Apis.Discovery.Parameter
                        {
                            Name = "requestMask.includeField",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "pageSize", new Google.Apis.Discovery.Parameter
                        {
                            Name = "pageSize",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "syncToken", new Google.Apis.Discovery.Parameter
                        {
                            Name = "syncToken",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "personFields", new Google.Apis.Discovery.Parameter
                        {
                            Name = "personFields",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                }

            }
        }

        /// <summary>Create a new contact and return the person resource for that contact.</summary>
        /// <param name="body">The body of the request.</param>
        public virtual CreateContactRequest CreateContact(Google.Apis.PeopleService.v1.Data.Person body)
        {
            return new CreateContactRequest(service, body);
        }

        /// <summary>Create a new contact and return the person resource for that contact.</summary>
        public class CreateContactRequest : PeopleServiceBaseServiceRequest<Google.Apis.PeopleService.v1.Data.Person>
        {
            /// <summary>Constructs a new CreateContact request.</summary>
            public CreateContactRequest(Google.Apis.Services.IClientService service, Google.Apis.PeopleService.v1.Data.Person body)
                : base(service)
            {
                Body = body;
                InitParameters();
            }


            /// <summary>The resource name of the owning person resource.</summary>
            [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Parent { get; set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.PeopleService.v1.Data.Person Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "createContact"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "v1/people:createContact"; }
            }

            /// <summary>Initializes CreateContact parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "parent", new Google.Apis.Discovery.Parameter
                    {
                        Name = "parent",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Delete a contact person. Any non-contact data will not be deleted.</summary>
        /// <param name="resourceName">The resource name of the contact to delete.</param>
        public virtual DeleteContactRequest DeleteContact(string resourceName)
        {
            return new DeleteContactRequest(service, resourceName);
        }

        /// <summary>Delete a contact person. Any non-contact data will not be deleted.</summary>
        public class DeleteContactRequest : PeopleServiceBaseServiceRequest<Google.Apis.PeopleService.v1.Data.Empty>
        {
            /// <summary>Constructs a new DeleteContact request.</summary>
            public DeleteContactRequest(Google.Apis.Services.IClientService service, string resourceName)
                : base(service)
            {
                ResourceName = resourceName;
                InitParameters();
            }


            /// <summary>The resource name of the contact to delete.</summary>
            [Google.Apis.Util.RequestParameterAttribute("resourceName", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string ResourceName { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "deleteContact"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "DELETE"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "v1/{+resourceName}:deleteContact"; }
            }

            /// <summary>Initializes DeleteContact parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "resourceName", new Google.Apis.Discovery.Parameter
                    {
                        Name = "resourceName",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"^people/[^/]+$",
                    });
            }

        }

        /// <summary>Provides information about a person by specifying a resource name. Use `people/me` to indicate the
        /// authenticated user.
        ///
        /// The request throws a 400 error if 'personFields' is not specified.</summary>
        /// <param name="resourceName">The resource name of the person to provide information about.
        ///
        /// - To get information about the authenticated user, specify `people/me`. - To get information about a google account,
        /// specify  `people/`account_id. - To get information about a contact, specify the resource name that   identifies the
        /// contact as returned by [`people.connections.list`](/people/api/rest/v1/people.connections/list).</param>
        public virtual GetRequest Get(string resourceName)
        {
            return new GetRequest(service, resourceName);
        }

        /// <summary>Provides information about a person by specifying a resource name. Use `people/me` to indicate the
        /// authenticated user.
        ///
        /// The request throws a 400 error if 'personFields' is not specified.</summary>
        public class GetRequest : PeopleServiceBaseServiceRequest<Google.Apis.PeopleService.v1.Data.Person>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, string resourceName)
                : base(service)
            {
                ResourceName = resourceName;
                InitParameters();
            }


            /// <summary>The resource name of the person to provide information about.
            ///
            /// - To get information about the authenticated user, specify `people/me`. - To get information about a
            /// google account, specify `people/`account_id. - To get information about a contact, specify the resource
            /// name that identifies the contact as returned by
            /// [`people.connections.list`](/people/api/rest/v1/people.connections/list).</summary>
            [Google.Apis.Util.RequestParameterAttribute("resourceName", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string ResourceName { get; private set; }

            /// <summary>**Required.** A field mask to restrict which fields on the person are returned. Valid values
            /// are:
            ///
            /// * addresses * ageRanges * biographies * birthdays * braggingRights * coverPhotos * emailAddresses *
            /// events * genders * imClients * interests * locales * memberships * metadata * names * nicknames *
            /// occupations * organizations * phoneNumbers * photos * relations * relationshipInterests *
            /// relationshipStatuses * residences * skills * taglines * urls</summary>
            [Google.Apis.Util.RequestParameterAttribute("personFields", Google.Apis.Util.RequestParameterType.Query)]
            public virtual object PersonFields { get; set; }

            /// <summary>**Required.** Comma-separated list of person fields to be included in the response. Each path
            /// should start with `person.`: for example, `person.names` or `person.photos`.</summary>
            [Google.Apis.Util.RequestParameterAttribute("requestMask.includeField", Google.Apis.Util.RequestParameterType.Query)]
            public virtual object RequestMaskIncludeField { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "v1/{+resourceName}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "resourceName", new Google.Apis.Discovery.Parameter
                    {
                        Name = "resourceName",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"^people/[^/]+$",
                    });
                RequestParameters.Add(
                    "personFields", new Google.Apis.Discovery.Parameter
                    {
                        Name = "personFields",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "requestMask.includeField", new Google.Apis.Discovery.Parameter
                    {
                        Name = "requestMask.includeField",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Provides information about a list of specific people by specifying a list of requested resource
        /// names. Use `people/me` to indicate the authenticated user.
        ///
        /// The request throws a 400 error if 'personFields' is not specified.</summary>
        public virtual GetBatchGetRequest GetBatchGet()
        {
            return new GetBatchGetRequest(service);
        }

        /// <summary>Provides information about a list of specific people by specifying a list of requested resource
        /// names. Use `people/me` to indicate the authenticated user.
        ///
        /// The request throws a 400 error if 'personFields' is not specified.</summary>
        public class GetBatchGetRequest : PeopleServiceBaseServiceRequest<Google.Apis.PeopleService.v1.Data.GetPeopleResponse>
        {
            /// <summary>Constructs a new GetBatchGet request.</summary>
            public GetBatchGetRequest(Google.Apis.Services.IClientService service)
                : base(service)
            {
                InitParameters();
            }


            /// <summary>**Required.** A field mask to restrict which fields on each person are returned. Valid values
            /// are:
            ///
            /// * addresses * ageRanges * biographies * birthdays * braggingRights * coverPhotos * emailAddresses *
            /// events * genders * imClients * interests * locales * memberships * metadata * names * nicknames *
            /// occupations * organizations * phoneNumbers * photos * relations * relationshipInterests *
            /// relationshipStatuses * residences * skills * taglines * urls</summary>
            [Google.Apis.Util.RequestParameterAttribute("personFields", Google.Apis.Util.RequestParameterType.Query)]
            public virtual object PersonFields { get; set; }

            /// <summary>**Required.** Comma-separated list of person fields to be included in the response. Each path
            /// should start with `person.`: for example, `person.names` or `person.photos`.</summary>
            [Google.Apis.Util.RequestParameterAttribute("requestMask.includeField", Google.Apis.Util.RequestParameterType.Query)]
            public virtual object RequestMaskIncludeField { get; set; }

            /// <summary>The resource names of the people to provide information about.
            ///
            /// - To get information about the authenticated user, specify `people/me`. - To get information about a
            /// google account, specify `people/`account_id. - To get information about a contact, specify the resource
            /// name that identifies the contact as returned by
            /// [`people.connections.list`](/people/api/rest/v1/people.connections/list).
            ///
            /// You can include up to 50 resource names in one request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("resourceNames", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> ResourceNames { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "getBatchGet"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "v1/people:batchGet"; }
            }

            /// <summary>Initializes GetBatchGet parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "personFields", new Google.Apis.Discovery.Parameter
                    {
                        Name = "personFields",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "requestMask.includeField", new Google.Apis.Discovery.Parameter
                    {
                        Name = "requestMask.includeField",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "resourceNames", new Google.Apis.Discovery.Parameter
                    {
                        Name = "resourceNames",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Update contact data for an existing contact person. Any non-contact data will not be modified.
        ///
        /// The request throws a 400 error if `updatePersonFields` is not specified.
        ///
        /// The request throws a 400 error if `person.metadata.sources` is not specified for the contact to be updated.
        ///
        /// The request throws a 412 error if `person.metadata.sources.etag` is different than the contact's etag, which
        /// indicates the contact has changed since its data was read. Clients should get the latest person and re-apply
        /// their updates to the latest person.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="resourceName">The resource name for the person, assigned by the server. An ASCII string with a max
        /// length of 27 characters, in the form of `people/`person_id.</param>
        public virtual UpdateContactRequest UpdateContact(Google.Apis.PeopleService.v1.Data.Person body, string resourceName)
        {
            return new UpdateContactRequest(service, body, resourceName);
        }

        /// <summary>Update contact data for an existing contact person. Any non-contact data will not be modified.
        ///
        /// The request throws a 400 error if `updatePersonFields` is not specified.
        ///
        /// The request throws a 400 error if `person.metadata.sources` is not specified for the contact to be updated.
        ///
        /// The request throws a 412 error if `person.metadata.sources.etag` is different than the contact's etag, which
        /// indicates the contact has changed since its data was read. Clients should get the latest person and re-apply
        /// their updates to the latest person.</summary>
        public class UpdateContactRequest : PeopleServiceBaseServiceRequest<Google.Apis.PeopleService.v1.Data.Person>
        {
            /// <summary>Constructs a new UpdateContact request.</summary>
            public UpdateContactRequest(Google.Apis.Services.IClientService service, Google.Apis.PeopleService.v1.Data.Person body, string resourceName)
                : base(service)
            {
                ResourceName = resourceName;
                Body = body;
                InitParameters();
            }


            /// <summary>The resource name for the person, assigned by the server. An ASCII string with a max length of
            /// 27 characters, in the form of `people/`person_id.</summary>
            [Google.Apis.Util.RequestParameterAttribute("resourceName", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string ResourceName { get; private set; }

            /// <summary>**Required.** A field mask to restrict which fields on the person are updated. Valid values
            /// are:
            ///
            /// * addresses * biographies * birthdays * braggingRights * emailAddresses * events * genders * imClients *
            /// interests * locales * names * nicknames * occupations * organizations * phoneNumbers * relations *
            /// residences * skills * urls</summary>
            [Google.Apis.Util.RequestParameterAttribute("updatePersonFields", Google.Apis.Util.RequestParameterType.Query)]
            public virtual object UpdatePersonFields { get; set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.PeopleService.v1.Data.Person Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "updateContact"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PATCH"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "v1/{+resourceName}:updateContact"; }
            }

            /// <summary>Initializes UpdateContact parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "resourceName", new Google.Apis.Discovery.Parameter
                    {
                        Name = "resourceName",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"^people/[^/]+$",
                    });
                RequestParameters.Add(
                    "updatePersonFields", new Google.Apis.Discovery.Parameter
                    {
                        Name = "updatePersonFields",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }
}

namespace Google.Apis.PeopleService.v1.Data
{    

    /// <summary>A person's physical address. May be a P.O. box or street address. All fields are optional.</summary>
    public class Address : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The city of the address.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("city")]
        public virtual string City { get; set; } 

        /// <summary>The country of the address.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("country")]
        public virtual string Country { get; set; } 

        /// <summary>The [ISO 3166-1 alpha-2](http://www.iso.org/iso/country_codes.htm) country code of the
        /// address.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("countryCode")]
        public virtual string CountryCode { get; set; } 

        /// <summary>The extended address of the address; for example, the apartment number.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("extendedAddress")]
        public virtual string ExtendedAddress { get; set; } 

        /// <summary>The read-only type of the address translated and formatted in the viewer's account locale or the
        /// `Accept-Language` HTTP header locale.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("formattedType")]
        public virtual string FormattedType { get; set; } 

        /// <summary>The unstructured value of the address. If this is not set by the user it will be automatically
        /// constructed from structured values.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("formattedValue")]
        public virtual string FormattedValue { get; set; } 

        /// <summary>Metadata about the address.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metadata")]
        public virtual FieldMetadata Metadata { get; set; } 

        /// <summary>The P.O. box of the address.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("poBox")]
        public virtual string PoBox { get; set; } 

        /// <summary>The postal code of the address.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("postalCode")]
        public virtual string PostalCode { get; set; } 

        /// <summary>The region of the address; for example, the state or province.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("region")]
        public virtual string Region { get; set; } 

        /// <summary>The street address.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("streetAddress")]
        public virtual string StreetAddress { get; set; } 

        /// <summary>The type of the address. The type can be custom or predefined. Possible values include, but are not
        /// limited to, the following:
        ///
        /// * `home` * `work` * `other`</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A person's age range.</summary>
    public class AgeRangeType : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The age range.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("ageRange")]
        public virtual string AgeRange { get; set; } 

        /// <summary>Metadata about the age range.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metadata")]
        public virtual FieldMetadata Metadata { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The response to a batch get contact groups request.</summary>
    public class BatchGetContactGroupsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The list of responses for each requested contact group resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("responses")]
        public virtual System.Collections.Generic.IList<ContactGroupResponse> Responses { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A person's short biography.</summary>
    public class Biography : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The content type of the biography.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contentType")]
        public virtual string ContentType { get; set; } 

        /// <summary>Metadata about the biography.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metadata")]
        public virtual FieldMetadata Metadata { get; set; } 

        /// <summary>The short biography.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("value")]
        public virtual string Value { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A person's birthday. At least one of the `date` and `text` fields are specified. The `date` and `text`
    /// fields typically represent the same date, but are not guaranteed to.</summary>
    public class Birthday : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The date of the birthday.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("date")]
        public virtual Date Date { get; set; } 

        /// <summary>Metadata about the birthday.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metadata")]
        public virtual FieldMetadata Metadata { get; set; } 

        /// <summary>A free-form string representing the user's birthday.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("text")]
        public virtual string Text { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A person's bragging rights.</summary>
    public class BraggingRights : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Metadata about the bragging rights.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metadata")]
        public virtual FieldMetadata Metadata { get; set; } 

        /// <summary>The bragging rights; for example, `climbed mount everest`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("value")]
        public virtual string Value { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A contact group.</summary>
    public class ContactGroup : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The [HTTP entity tag](https://en.wikipedia.org/wiki/HTTP_ETag) of the resource. Used for web cache
        /// validation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("etag")]
        public virtual string ETag { get; set; } 

        /// <summary>The read-only name translated and formatted in the viewer's account locale or the `Accept-Language`
        /// HTTP header locale for system groups names. Group names set by the owner are the same as name.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("formattedName")]
        public virtual string FormattedName { get; set; } 

        /// <summary>The read-only contact group type.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("groupType")]
        public virtual string GroupType { get; set; } 

        /// <summary>The total number of contacts in the group irrespective of max members in specified in the
        /// request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("memberCount")]
        public virtual System.Nullable<int> MemberCount { get; set; } 

        /// <summary>The list of contact person resource names that are members of the contact group. The field is not
        /// populated for LIST requests and can only be updated through the
        /// [ModifyContactGroupMembers](/people/api/rest/v1/contactgroups/members/modify).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("memberResourceNames")]
        public virtual System.Collections.Generic.IList<string> MemberResourceNames { get; set; } 

        /// <summary>Metadata about the contact group.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metadata")]
        public virtual ContactGroupMetadata Metadata { get; set; } 

        /// <summary>The contact group name set by the group owner or a system provided name for system
        /// groups.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>The resource name for the contact group, assigned by the server. An ASCII string, in the form of
        /// `contactGroups/`contact_group_id.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("resourceName")]
        public virtual string ResourceName { get; set; } 

    }    

    /// <summary>A Google contact group membership.</summary>
    public class ContactGroupMembership : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The contact group ID for the contact group membership. The contact group ID can be custom or
        /// predefined. Possible values include, but are not limited to, the following:
        ///
        /// *  `myContacts` *  `starred` *  A numerical ID for user-created groups.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contactGroupId")]
        public virtual string ContactGroupId { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The read-only metadata about a contact group.</summary>
    public class ContactGroupMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>True if the contact group resource has been deleted. Populated only for
        /// [`ListContactGroups`](/people/api/rest/v1/contactgroups/list) requests that include a sync token.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("deleted")]
        public virtual System.Nullable<bool> Deleted { get; set; } 

        /// <summary>The time the group was last updated.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateTime")]
        public virtual object UpdateTime { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The response for a specific contact group.</summary>
    public class ContactGroupResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The contact group.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contactGroup")]
        public virtual ContactGroup ContactGroup { get; set; } 

        /// <summary>The original requested resource name.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("requestedResourceName")]
        public virtual string RequestedResourceName { get; set; } 

        /// <summary>The status of the response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("status")]
        public virtual Status Status { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A person's read-only cover photo. A large image shown on the person's profile page that represents who
    /// they are or what they care about.</summary>
    public class CoverPhoto : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>True if the cover photo is the default cover photo; false if the cover photo is a user-provided
        /// cover photo.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("default")]
        public virtual System.Nullable<bool> Default__ { get; set; } 

        /// <summary>Metadata about the cover photo.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metadata")]
        public virtual FieldMetadata Metadata { get; set; } 

        /// <summary>The URL of the cover photo.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("url")]
        public virtual string Url { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A request to create a new contact group.</summary>
    public class CreateContactGroupRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The contact group to create.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contactGroup")]
        public virtual ContactGroup ContactGroup { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Represents a whole calendar date, for example a date of birth. The time of day and time zone are either
    /// specified elsewhere or are not significant. The date is relative to the [Proleptic Gregorian
    /// Calendar](https://en.wikipedia.org/wiki/Proleptic_Gregorian_calendar). The day may be 0 to represent a year and
    /// month where the day is not significant. The year may be 0 to represent a month and day independent of year; for
    /// example, anniversary date.</summary>
    public class Date : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Day of month. Must be from 1 to 31 and valid for the year and month, or 0 if specifying a
        /// year/month where the day is not significant.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("day")]
        public virtual System.Nullable<int> Day { get; set; } 

        /// <summary>Month of year. Must be from 1 to 12.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("month")]
        public virtual System.Nullable<int> Month { get; set; } 

        /// <summary>Year of date. Must be from 1 to 9999, or 0 if specifying a date without a year.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("year")]
        public virtual System.Nullable<int> Year { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A Google Apps Domain membership.</summary>
    public class DomainMembership : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>True if the person is in the viewer's Google Apps domain.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("inViewerDomain")]
        public virtual System.Nullable<bool> InViewerDomain { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A person's email address.</summary>
    public class EmailAddress : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The display name of the email.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
        public virtual string DisplayName { get; set; } 

        /// <summary>The read-only type of the email address translated and formatted in the viewer's account locale or
        /// the `Accept-Language` HTTP header locale.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("formattedType")]
        public virtual string FormattedType { get; set; } 

        /// <summary>Metadata about the email address.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metadata")]
        public virtual FieldMetadata Metadata { get; set; } 

        /// <summary>The type of the email address. The type can be custom or predefined. Possible values include, but
        /// are not limited to, the following:
        ///
        /// * `home` * `work` * `other`</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type { get; set; } 

        /// <summary>The email address.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("value")]
        public virtual string Value { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A
    /// typical example is to use it as the request or the response type of an API method. For instance:
    ///
    /// service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
    ///
    /// The JSON representation for `Empty` is empty JSON object `{}`.</summary>
    public class Empty : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>An event related to the person.</summary>
    public class Event : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The date of the event.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("date")]
        public virtual Date Date { get; set; } 

        /// <summary>The read-only type of the event translated and formatted in the viewer's account locale or the
        /// `Accept-Language` HTTP header locale.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("formattedType")]
        public virtual string FormattedType { get; set; } 

        /// <summary>Metadata about the event.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metadata")]
        public virtual FieldMetadata Metadata { get; set; } 

        /// <summary>The type of the event. The type can be custom or predefined. Possible values include, but are not
        /// limited to, the following:
        ///
        /// * `anniversary` * `other`</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Metadata about a field.</summary>
    public class FieldMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>True if the field is the primary field; false if the field is a secondary field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("primary")]
        public virtual System.Nullable<bool> Primary { get; set; } 

        /// <summary>The source of the field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("source")]
        public virtual Source Source { get; set; } 

        /// <summary>True if the field is verified; false if the field is unverified. A verified field is typically a
        /// name, email address, phone number, or website that has been confirmed to be owned by the person.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("verified")]
        public virtual System.Nullable<bool> Verified { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A person's gender.</summary>
    public class Gender : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The read-only value of the gender translated and formatted in the viewer's account locale or the
        /// `Accept-Language` HTTP header locale.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("formattedValue")]
        public virtual string FormattedValue { get; set; } 

        /// <summary>Metadata about the gender.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metadata")]
        public virtual FieldMetadata Metadata { get; set; } 

        /// <summary>The gender for the person. The gender can be custom or predefined. Possible values include, but are
        /// not limited to, the following:
        ///
        /// * `male` * `female` * `other` * `unknown`</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("value")]
        public virtual string Value { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class GetPeopleResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The response for each requested resource name.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("responses")]
        public virtual System.Collections.Generic.IList<PersonResponse> Responses { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A person's instant messaging client.</summary>
    public class ImClient : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The read-only protocol of the IM client formatted in the viewer's account locale or the `Accept-
        /// Language` HTTP header locale.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("formattedProtocol")]
        public virtual string FormattedProtocol { get; set; } 

        /// <summary>The read-only type of the IM client translated and formatted in the viewer's account locale or the
        /// `Accept-Language` HTTP header locale.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("formattedType")]
        public virtual string FormattedType { get; set; } 

        /// <summary>Metadata about the IM client.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metadata")]
        public virtual FieldMetadata Metadata { get; set; } 

        /// <summary>The protocol of the IM client. The protocol can be custom or predefined. Possible values include,
        /// but are not limited to, the following:
        ///
        /// * `aim` * `msn` * `yahoo` * `skype` * `qq` * `googleTalk` * `icq` * `jabber` * `netMeeting`</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("protocol")]
        public virtual string Protocol { get; set; } 

        /// <summary>The type of the IM client. The type can be custom or predefined. Possible values include, but are
        /// not limited to, the following:
        ///
        /// * `home` * `work` * `other`</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type { get; set; } 

        /// <summary>The user name used in the IM client.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("username")]
        public virtual string Username { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>One of the person's interests.</summary>
    public class Interest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Metadata about the interest.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metadata")]
        public virtual FieldMetadata Metadata { get; set; } 

        /// <summary>The interest; for example, `stargazing`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("value")]
        public virtual string Value { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class ListConnectionsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The list of people that the requestor is connected to.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("connections")]
        public virtual System.Collections.Generic.IList<Person> Connections { get; set; } 

        /// <summary>The token that can be used to retrieve the next page of results.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>The token that can be used to retrieve changes since the last request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextSyncToken")]
        public virtual string NextSyncToken { get; set; } 

        /// <summary>The total number of items in the list without pagination.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("totalItems")]
        public virtual System.Nullable<int> TotalItems { get; set; } 

        /// <summary>**DEPRECATED** (Please use totalItems) The total number of people in the list without
        /// pagination.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("totalPeople")]
        public virtual System.Nullable<int> TotalPeople { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The response to a list contact groups request.</summary>
    public class ListContactGroupsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The list of contact groups. Members of the contact groups are not populated.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contactGroups")]
        public virtual System.Collections.Generic.IList<ContactGroup> ContactGroups { get; set; } 

        /// <summary>The token that can be used to retrieve the next page of results.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>The token that can be used to retrieve changes since the last request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextSyncToken")]
        public virtual string NextSyncToken { get; set; } 

        /// <summary>The total number of items in the list without pagination.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("totalItems")]
        public virtual System.Nullable<int> TotalItems { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A person's locale preference.</summary>
    public class Locale : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Metadata about the locale.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metadata")]
        public virtual FieldMetadata Metadata { get; set; } 

        /// <summary>The well-formed [IETF BCP 47](https://tools.ietf.org/html/bcp47) language tag representing the
        /// locale.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("value")]
        public virtual string Value { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A person's read-only membership in a group.</summary>
    public class Membership : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The contact group membership.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contactGroupMembership")]
        public virtual ContactGroupMembership ContactGroupMembership { get; set; } 

        /// <summary>The domain membership.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("domainMembership")]
        public virtual DomainMembership DomainMembership { get; set; } 

        /// <summary>Metadata about the membership.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metadata")]
        public virtual FieldMetadata Metadata { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A request to modify an existing contact group's members.</summary>
    public class ModifyContactGroupMembersRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The resource names of the contact people to add in the form of in the form
        /// `people/`person_id.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("resourceNamesToAdd")]
        public virtual System.Collections.Generic.IList<string> ResourceNamesToAdd { get; set; } 

        /// <summary>The resource names of the contact people to remove in the form of in the form of
        /// `people/`person_id.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("resourceNamesToRemove")]
        public virtual System.Collections.Generic.IList<string> ResourceNamesToRemove { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The response to a modify contact group members request.</summary>
    public class ModifyContactGroupMembersResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The contact people resource names that were not found.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("notFoundResourceNames")]
        public virtual System.Collections.Generic.IList<string> NotFoundResourceNames { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A person's name. If the name is a mononym, the family name is empty.</summary>
    public class Name : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The read-only display name formatted according to the locale specified by the viewer's account or
        /// the `Accept-Language` HTTP header.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
        public virtual string DisplayName { get; set; } 

        /// <summary>The read-only display name with the last name first formatted according to the locale specified by
        /// the viewer's account or the `Accept-Language` HTTP header.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayNameLastFirst")]
        public virtual string DisplayNameLastFirst { get; set; } 

        /// <summary>The family name.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("familyName")]
        public virtual string FamilyName { get; set; } 

        /// <summary>The given name.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("givenName")]
        public virtual string GivenName { get; set; } 

        /// <summary>The honorific prefixes, such as `Mrs.` or `Dr.`</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("honorificPrefix")]
        public virtual string HonorificPrefix { get; set; } 

        /// <summary>The honorific suffixes, such as `Jr.`</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("honorificSuffix")]
        public virtual string HonorificSuffix { get; set; } 

        /// <summary>Metadata about the name.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metadata")]
        public virtual FieldMetadata Metadata { get; set; } 

        /// <summary>The middle name(s).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("middleName")]
        public virtual string MiddleName { get; set; } 

        /// <summary>The family name spelled as it sounds.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("phoneticFamilyName")]
        public virtual string PhoneticFamilyName { get; set; } 

        /// <summary>The full name spelled as it sounds.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("phoneticFullName")]
        public virtual string PhoneticFullName { get; set; } 

        /// <summary>The given name spelled as it sounds.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("phoneticGivenName")]
        public virtual string PhoneticGivenName { get; set; } 

        /// <summary>The honorific prefixes spelled as they sound.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("phoneticHonorificPrefix")]
        public virtual string PhoneticHonorificPrefix { get; set; } 

        /// <summary>The honorific suffixes spelled as they sound.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("phoneticHonorificSuffix")]
        public virtual string PhoneticHonorificSuffix { get; set; } 

        /// <summary>The middle name(s) spelled as they sound.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("phoneticMiddleName")]
        public virtual string PhoneticMiddleName { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A person's nickname.</summary>
    public class Nickname : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Metadata about the nickname.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metadata")]
        public virtual FieldMetadata Metadata { get; set; } 

        /// <summary>The type of the nickname.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type { get; set; } 

        /// <summary>The nickname.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("value")]
        public virtual string Value { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A person's occupation.</summary>
    public class Occupation : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Metadata about the occupation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metadata")]
        public virtual FieldMetadata Metadata { get; set; } 

        /// <summary>The occupation; for example, `carpenter`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("value")]
        public virtual string Value { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A person's past or current organization. Overlapping date ranges are permitted.</summary>
    public class Organization : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>True if the organization is the person's current organization; false if the organization is a past
        /// organization.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("current")]
        public virtual System.Nullable<bool> Current { get; set; } 

        /// <summary>The person's department at the organization.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("department")]
        public virtual string Department { get; set; } 

        /// <summary>The domain name associated with the organization; for example, `google.com`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("domain")]
        public virtual string Domain { get; set; } 

        /// <summary>The end date when the person left the organization.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("endDate")]
        public virtual Date EndDate { get; set; } 

        /// <summary>The read-only type of the organization translated and formatted in the viewer's account locale or
        /// the `Accept-Language` HTTP header locale.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("formattedType")]
        public virtual string FormattedType { get; set; } 

        /// <summary>The person's job description at the organization.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("jobDescription")]
        public virtual string JobDescription { get; set; } 

        /// <summary>The location of the organization office the person works at.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("location")]
        public virtual string Location { get; set; } 

        /// <summary>Metadata about the organization.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metadata")]
        public virtual FieldMetadata Metadata { get; set; } 

        /// <summary>The name of the organization.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>The phonetic name of the organization.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("phoneticName")]
        public virtual string PhoneticName { get; set; } 

        /// <summary>The start date when the person joined the organization.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("startDate")]
        public virtual Date StartDate { get; set; } 

        /// <summary>The symbol associated with the organization; for example, a stock ticker symbol, abbreviation, or
        /// acronym.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("symbol")]
        public virtual string Symbol { get; set; } 

        /// <summary>The person's job title at the organization.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title { get; set; } 

        /// <summary>The type of the organization. The type can be custom or predefined. Possible values include, but
        /// are not limited to, the following:
        ///
        /// * `work` * `school`</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Information about a person merged from various data sources such as the authenticated user's contacts
    /// and profile data.
    ///
    /// Most fields can have multiple items. The items in a field have no guaranteed order, but each non-empty field is
    /// guaranteed to have exactly one field with `metadata.primary` set to true.</summary>
    public class Person : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The person's street addresses.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("addresses")]
        public virtual System.Collections.Generic.IList<Address> Addresses { get; set; } 

        /// <summary>**DEPRECATED** (Please use `person.ageRanges` instead)**
        ///
        /// The person's read-only age range.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("ageRange")]
        public virtual string AgeRange { get; set; } 

        /// <summary>The person's read-only age ranges.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("ageRanges")]
        public virtual System.Collections.Generic.IList<AgeRangeType> AgeRanges { get; set; } 

        /// <summary>The person's biographies.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("biographies")]
        public virtual System.Collections.Generic.IList<Biography> Biographies { get; set; } 

        /// <summary>The person's birthdays.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("birthdays")]
        public virtual System.Collections.Generic.IList<Birthday> Birthdays { get; set; } 

        /// <summary>The person's bragging rights.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("braggingRights")]
        public virtual System.Collections.Generic.IList<BraggingRights> BraggingRights { get; set; } 

        /// <summary>The person's read-only cover photos.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("coverPhotos")]
        public virtual System.Collections.Generic.IList<CoverPhoto> CoverPhotos { get; set; } 

        /// <summary>The person's email addresses.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("emailAddresses")]
        public virtual System.Collections.Generic.IList<EmailAddress> EmailAddresses { get; set; } 

        /// <summary>The [HTTP entity tag](https://en.wikipedia.org/wiki/HTTP_ETag) of the resource. Used for web cache
        /// validation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("etag")]
        public virtual string ETag { get; set; } 

        /// <summary>The person's events.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("events")]
        public virtual System.Collections.Generic.IList<Event> Events { get; set; } 

        /// <summary>The person's genders.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("genders")]
        public virtual System.Collections.Generic.IList<Gender> Genders { get; set; } 

        /// <summary>The person's instant messaging clients.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("imClients")]
        public virtual System.Collections.Generic.IList<ImClient> ImClients { get; set; } 

        /// <summary>The person's interests.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("interests")]
        public virtual System.Collections.Generic.IList<Interest> Interests { get; set; } 

        /// <summary>The person's locale preferences.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("locales")]
        public virtual System.Collections.Generic.IList<Locale> Locales { get; set; } 

        /// <summary>The person's read-only group memberships.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("memberships")]
        public virtual System.Collections.Generic.IList<Membership> Memberships { get; set; } 

        /// <summary>Read-only metadata about the person.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metadata")]
        public virtual PersonMetadata Metadata { get; set; } 

        /// <summary>The person's names.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("names")]
        public virtual System.Collections.Generic.IList<Name> Names { get; set; } 

        /// <summary>The person's nicknames.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nicknames")]
        public virtual System.Collections.Generic.IList<Nickname> Nicknames { get; set; } 

        /// <summary>The person's occupations.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("occupations")]
        public virtual System.Collections.Generic.IList<Occupation> Occupations { get; set; } 

        /// <summary>The person's past or current organizations.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("organizations")]
        public virtual System.Collections.Generic.IList<Organization> Organizations { get; set; } 

        /// <summary>The person's phone numbers.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("phoneNumbers")]
        public virtual System.Collections.Generic.IList<PhoneNumber> PhoneNumbers { get; set; } 

        /// <summary>The person's read-only photos.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("photos")]
        public virtual System.Collections.Generic.IList<Photo> Photos { get; set; } 

        /// <summary>The person's relations.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("relations")]
        public virtual System.Collections.Generic.IList<Relation> Relations { get; set; } 

        /// <summary>The person's read-only relationship interests.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("relationshipInterests")]
        public virtual System.Collections.Generic.IList<RelationshipInterest> RelationshipInterests { get; set; } 

        /// <summary>The person's read-only relationship statuses.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("relationshipStatuses")]
        public virtual System.Collections.Generic.IList<RelationshipStatus> RelationshipStatuses { get; set; } 

        /// <summary>The person's residences.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("residences")]
        public virtual System.Collections.Generic.IList<Residence> Residences { get; set; } 

        /// <summary>The resource name for the person, assigned by the server. An ASCII string with a max length of 27
        /// characters, in the form of `people/`person_id.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("resourceName")]
        public virtual string ResourceName { get; set; } 

        /// <summary>The person's skills.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("skills")]
        public virtual System.Collections.Generic.IList<Skill> Skills { get; set; } 

        /// <summary>The person's read-only taglines.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("taglines")]
        public virtual System.Collections.Generic.IList<Tagline> Taglines { get; set; } 

        /// <summary>The person's associated URLs.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("urls")]
        public virtual System.Collections.Generic.IList<Url> Urls { get; set; } 

    }    

    /// <summary>The read-only metadata about a person.</summary>
    public class PersonMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>True if the person resource has been deleted. Populated only for
        /// [`connections.list`](/people/api/rest/v1/people.connections/list) requests that include a sync
        /// token.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("deleted")]
        public virtual System.Nullable<bool> Deleted { get; set; } 

        /// <summary>Resource names of people linked to this resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("linkedPeopleResourceNames")]
        public virtual System.Collections.Generic.IList<string> LinkedPeopleResourceNames { get; set; } 

        /// <summary>**DEPRECATED** (Please use `person.metadata.sources.profileMetadata.objectType` instead)
        ///
        /// The type of the person object.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("objectType")]
        public virtual string ObjectType { get; set; } 

        /// <summary>Any former resource names this person has had. Populated only for
        /// [`connections.list`](/people/api/rest/v1/people.connections/list) requests that include a sync token.
        ///
        /// The resource name may change when adding or removing fields that link a contact and profile such as a
        /// verified email, verified phone number, or profile URL.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("previousResourceNames")]
        public virtual System.Collections.Generic.IList<string> PreviousResourceNames { get; set; } 

        /// <summary>The sources of data for the person.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sources")]
        public virtual System.Collections.Generic.IList<Source> Sources { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The response for a single person</summary>
    public class PersonResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>**DEPRECATED** (Please use status instead)
        ///
        /// [HTTP 1.1 status code] (http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("httpStatusCode")]
        public virtual System.Nullable<int> HttpStatusCode { get; set; } 

        /// <summary>The person.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("person")]
        public virtual Person Person { get; set; } 

        /// <summary>The original requested resource name. May be different than the resource name on the returned
        /// person.
        ///
        /// The resource name can change when adding or removing fields that link a contact and profile such as a
        /// verified email, verified phone number, or a profile URL.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("requestedResourceName")]
        public virtual string RequestedResourceName { get; set; } 

        /// <summary>The status of the response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("status")]
        public virtual Status Status { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A person's phone number.</summary>
    public class PhoneNumber : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The read-only canonicalized [ITU-T
        /// E.164](https://law.resource.org/pub/us/cfr/ibr/004/itu-t.E.164.1.2008.pdf) form of the phone
        /// number.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("canonicalForm")]
        public virtual string CanonicalForm { get; set; } 

        /// <summary>The read-only type of the phone number translated and formatted in the viewer's account locale or
        /// the `Accept-Language` HTTP header locale.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("formattedType")]
        public virtual string FormattedType { get; set; } 

        /// <summary>Metadata about the phone number.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metadata")]
        public virtual FieldMetadata Metadata { get; set; } 

        /// <summary>The type of the phone number. The type can be custom or predefined. Possible values include, but
        /// are not limited to, the following:
        ///
        /// * `home` * `work` * `mobile` * `homeFax` * `workFax` * `otherFax` * `pager` * `workMobile` * `workPager` *
        /// `main` * `googleVoice` * `other`</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type { get; set; } 

        /// <summary>The phone number.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("value")]
        public virtual string Value { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A person's read-only photo. A picture shown next to the person's name to help others recognize the
    /// person.</summary>
    public class Photo : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Metadata about the photo.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metadata")]
        public virtual FieldMetadata Metadata { get; set; } 

        /// <summary>The URL of the photo. You can change the desired size by appending a query parameter `sz=`size at
        /// the end of the url. Example: `https://lh3.googleusercontent.com/-T_wVWLlmg7w/AAAAAAAAAAI/AAAAAAAABa8/00gzXvD
        /// BYqw/s100/photo.jpg?sz=50`</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("url")]
        public virtual string Url { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The read-only metadata about a profile.</summary>
    public class ProfileMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The profile object type.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("objectType")]
        public virtual string ObjectType { get; set; } 

        /// <summary>The user types.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("userTypes")]
        public virtual System.Collections.Generic.IList<string> UserTypes { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A person's relation to another person.</summary>
    public class Relation : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The type of the relation translated and formatted in the viewer's account locale or the locale
        /// specified in the Accept-Language HTTP header.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("formattedType")]
        public virtual string FormattedType { get; set; } 

        /// <summary>Metadata about the relation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metadata")]
        public virtual FieldMetadata Metadata { get; set; } 

        /// <summary>The name of the other person this relation refers to.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("person")]
        public virtual string Person { get; set; } 

        /// <summary>The person's relation to the other person. The type can be custom or predefined. Possible values
        /// include, but are not limited to, the following values:
        ///
        /// * `spouse` * `child` * `mother` * `father` * `parent` * `brother` * `sister` * `friend` * `relative` *
        /// `domesticPartner` * `manager` * `assistant` * `referredBy` * `partner`</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A person's read-only relationship interest .</summary>
    public class RelationshipInterest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The value of the relationship interest translated and formatted in the viewer's account locale or
        /// the locale specified in the Accept-Language HTTP header.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("formattedValue")]
        public virtual string FormattedValue { get; set; } 

        /// <summary>Metadata about the relationship interest.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metadata")]
        public virtual FieldMetadata Metadata { get; set; } 

        /// <summary>The kind of relationship the person is looking for. The value can be custom or predefined. Possible
        /// values include, but are not limited to, the following values:
        ///
        /// * `friend` * `date` * `relationship` * `networking`</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("value")]
        public virtual string Value { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A person's read-only relationship status.</summary>
    public class RelationshipStatus : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The read-only value of the relationship status translated and formatted in the viewer's account
        /// locale or the `Accept-Language` HTTP header locale.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("formattedValue")]
        public virtual string FormattedValue { get; set; } 

        /// <summary>Metadata about the relationship status.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metadata")]
        public virtual FieldMetadata Metadata { get; set; } 

        /// <summary>The relationship status. The value can be custom or predefined. Possible values include, but are
        /// not limited to, the following:
        ///
        /// * `single` * `inARelationship` * `engaged` * `married` * `itsComplicated` * `openRelationship` * `widowed` *
        /// `inDomesticPartnership` * `inCivilUnion`</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("value")]
        public virtual string Value { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A person's past or current residence.</summary>
    public class Residence : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>True if the residence is the person's current residence; false if the residence is a past
        /// residence.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("current")]
        public virtual System.Nullable<bool> Current { get; set; } 

        /// <summary>Metadata about the residence.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metadata")]
        public virtual FieldMetadata Metadata { get; set; } 

        /// <summary>The address of the residence.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("value")]
        public virtual string Value { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A skill that the person has.</summary>
    public class Skill : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Metadata about the skill.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metadata")]
        public virtual FieldMetadata Metadata { get; set; } 

        /// <summary>The skill; for example, `underwater basket weaving`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("value")]
        public virtual string Value { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The source of a field.</summary>
    public class Source : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>**Only populated in `person.metadata.sources`.**
        ///
        /// The [HTTP entity tag](https://en.wikipedia.org/wiki/HTTP_ETag) of the source. Used for web cache
        /// validation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("etag")]
        public virtual string ETag { get; set; } 

        /// <summary>The unique identifier within the source type generated by the server.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; } 

        /// <summary>**Only populated in `person.metadata.sources`.**
        ///
        /// Metadata about a source of type PROFILE.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("profileMetadata")]
        public virtual ProfileMetadata ProfileMetadata { get; set; } 

        /// <summary>The source type.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type { get; set; } 

        /// <summary>**Only populated in `person.metadata.sources`.**
        ///
        /// Last update timestamp of this source.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateTime")]
        public virtual object UpdateTime { get; set; } 

    }    

    /// <summary>The `Status` type defines a logical error model that is suitable for different programming
    /// environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). The error model
    /// is designed to be:
    ///
    /// - Simple to use and understand for most users - Flexible enough to meet unexpected needs
    ///
    /// # Overview
    ///
    /// The `Status` message contains three pieces of data: error code, error message, and error details. The error code
    /// should be an enum value of google.rpc.Code, but it may accept additional error codes if needed.  The error
    /// message should be a developer-facing English message that helps developers *understand* and *resolve* the error.
    /// If a localized user-facing error message is needed, put the localized message in the error details or localize
    /// it in the client. The optional error details may contain arbitrary information about the error. There is a
    /// predefined set of error detail types in the package `google.rpc` that can be used for common error conditions.
    ///
    /// # Language mapping
    ///
    /// The `Status` message is the logical representation of the error model, but it is not necessarily the actual wire
    /// format. When the `Status` message is exposed in different client libraries and different wire protocols, it can
    /// be mapped differently. For example, it will likely be mapped to some exceptions in Java, but more likely mapped
    /// to some error codes in C.
    ///
    /// # Other uses
    ///
    /// The error model and the `Status` message can be used in a variety of environments, either with or without APIs,
    /// to provide a consistent developer experience across different environments.
    ///
    /// Example uses of this error model include:
    ///
    /// - Partial errors. If a service needs to return partial errors to the client, it may embed the `Status` in the
    /// normal response to indicate the partial errors.
    ///
    /// - Workflow errors. A typical workflow has multiple steps. Each step may have a `Status` message for error
    /// reporting.
    ///
    /// - Batch operations. If a client uses batch request and batch response, the `Status` message should be used
    /// directly inside batch response, one for each error sub-response.
    ///
    /// - Asynchronous operations. If an API call embeds asynchronous operation results in its response, the status of
    /// those operations should be represented directly using the `Status` message.
    ///
    /// - Logging. If some API errors are stored in logs, the message `Status` could be used directly after any
    /// stripping needed for security/privacy reasons.</summary>
    public class Status : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The status code, which should be an enum value of google.rpc.Code.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("code")]
        public virtual System.Nullable<int> Code { get; set; } 

        /// <summary>A list of messages that carry the error details.  There is a common set of message types for APIs
        /// to use.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("details")]
        public virtual System.Collections.Generic.IList<System.Collections.Generic.IDictionary<string,object>> Details { get; set; } 

        /// <summary>A developer-facing error message, which should be in English. Any user-facing error message should
        /// be localized and sent in the google.rpc.Status.details field, or localized by the client.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("message")]
        public virtual string Message { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A read-only brief one-line description of the person.</summary>
    public class Tagline : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Metadata about the tagline.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metadata")]
        public virtual FieldMetadata Metadata { get; set; } 

        /// <summary>The tagline.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("value")]
        public virtual string Value { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A request to update an existing contact group. Only the name can be updated.</summary>
    public class UpdateContactGroupRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The contact group to update.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contactGroup")]
        public virtual ContactGroup ContactGroup { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A person's associated URLs.</summary>
    public class Url : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The read-only type of the URL translated and formatted in the viewer's account locale or the
        /// `Accept-Language` HTTP header locale.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("formattedType")]
        public virtual string FormattedType { get; set; } 

        /// <summary>Metadata about the URL.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metadata")]
        public virtual FieldMetadata Metadata { get; set; } 

        /// <summary>The type of the URL. The type can be custom or predefined. Possible values include, but are not
        /// limited to, the following:
        ///
        /// * `home` * `work` * `blog` * `profile` * `homePage` * `ftp` * `reservations` * `appInstallPage`: website for
        /// a Google+ application. * `other`</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type { get; set; } 

        /// <summary>The URL.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("value")]
        public virtual string Value { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }
}
